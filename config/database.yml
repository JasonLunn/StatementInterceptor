# MySQL. Versions 5.1.10 and up are supported.
#
# Install the MySQL driver:
#   gem install activerecord-jdbcmysql-adapter
#
# Configure Using Gemfile
# gem 'activerecord-jdbcmysql-adapter'
#
# And be sure to use new-style password hashing:
#   https://dev.mysql.com/doc/refman/5.7/en/password-hashing.html
#
default: &default
  adapter: mysql
  pool: <%= ENV.fetch("RAILS_MAX_THREADS") { 5 } %>
  username: 
  password: 
  host: localhost
  properties:
    statementInterceptors: com.example.mysql.MyStatementInterceptor

development:
  <<: *default
  database: 

# Warning: The database defined as "test" will be erased and
# re-generated from your development database when you run "rake".
# Do not set this db to the same as development or production.
test:
  <<: *default
  database: 

# As with config/secrets.yml, you never want to store sensitive information,
# like your database password, in your source code. If your source code is
# ever seen by anyone, they now have access to your database.
#
# Instead, provide the password as a unix environment variable when you boot
# the app. Read http://guides.rubyonrails.org/configuring.html#configuring-a-database
# for a full rundown on how to provide these environment variables in a
# production deployment.
#
# On Heroku and other platform providers, you may have a full connection URL
# available as an environment variable. For example:
#
#   DATABASE_URL="mysql://myuser:mypass@localhost/somedatabase"
#
# You can use this database configuration with:
#
#   production:
#     url: <%= ENV['DATABASE_URL'] %>
#
production:
  <<: *default
  database: statement_interceptor_production
  username: statement_interceptor
  password: <%= ENV['STATEMENT_INTERCEPTOR_DATABASE_PASSWORD'] %>
